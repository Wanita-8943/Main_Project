{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Wanita-8943/Main_Project/blob/main/(1e-4)AC3_AllAge_Predict_Freeze_250.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8vYOj7qs68CC"
      },
      "source": [
        "##เรียกใช้ CSV"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-WlXPl93BpDM",
        "outputId": "323537f3-02d0-43fd-fe6f-e8c44e102653"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "vCxtnct6BtlL"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vwAfx2vRCdxm",
        "outputId": "94cd06cf-d078-44df-d262-edb62a4cfa38"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content\n",
            "Cloning into 'efficientnet_keras_transfer_learning'...\n",
            "remote: Enumerating objects: 1079, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (121/121), done.\u001b[K\n",
            "remote: Total 1079 (delta 121), reused 241 (delta 121), pack-reused 837\u001b[K\n",
            "Receiving objects: 100% (1079/1079), 13.94 MiB | 13.59 MiB/s, done.\n",
            "Resolving deltas: 100% (618/618), done.\n",
            "/content/efficientnet_keras_transfer_learning\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "%cd /content\n",
        "if not os.path.isdir(\"efficientnet_keras_transfer_learning\"):\n",
        " !git clone https://github.com/Wanita-8943/efficientnet_keras_transfer_learning\n",
        "%cd efficientnet_keras_transfer_learning/"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "1RiTwdWRBvgU",
        "outputId": "160166d9-e6f0-462b-928f-4b7bfccc3bb6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Fig_Age  Fig_Person_Sex  Age(year) Class  Class_Re       Filename  \\\n",
              "0           1               1          7   Y07         0         V1.jpg   \n",
              "1           2               1          7   Y07         0    Flip_V1.jpg   \n",
              "2           3               2          7   Y07         0         V2.jpg   \n",
              "3           4               2          7   Y07         0    Flip_V2.jpg   \n",
              "4           5               3          7   Y07         0         V3.jpg   \n",
              "...       ...             ...        ...   ...       ...            ...   \n",
              "4745      121              77         25   Y25        18  Flip_J463.jpg   \n",
              "4746      122              78         25   Y25        18       J464.jpg   \n",
              "4747      123              78         25   Y25        18  Flip_J464.jpg   \n",
              "4748      124              79         25   Y25        18       J465.jpg   \n",
              "4749      125              79         25   Y25        18  Flip_J465.jpg   \n",
              "\n",
              "                                          Path_filename     Sex Floder  \n",
              "0     /content/drive/My Drive/TVT_All_Age/train/Y07/...  Female   Both  \n",
              "1     /content/drive/My Drive/TVT_All_Age/train/Y07/...  Female   Both  \n",
              "2     /content/drive/My Drive/TVT_All_Age/train/Y07/...  Female   Both  \n",
              "3     /content/drive/My Drive/TVT_All_Age/train/Y07/...  Female   Both  \n",
              "4     /content/drive/My Drive/TVT_All_Age/train/Y07/...  Female   Both  \n",
              "...                                                 ...     ...    ...  \n",
              "4745  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "4746  /content/drive/My Drive/TVT_All_Age/test/Y25/J...    Male   Both  \n",
              "4747  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "4748  /content/drive/My Drive/TVT_All_Age/test/Y25/J...    Male   Both  \n",
              "4749  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "\n",
              "[4750 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-573bc01f-7ebc-4c95-bfd3-c399319881ac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fig_Age</th>\n",
              "      <th>Fig_Person_Sex</th>\n",
              "      <th>Age(year)</th>\n",
              "      <th>Class</th>\n",
              "      <th>Class_Re</th>\n",
              "      <th>Filename</th>\n",
              "      <th>Path_filename</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Floder</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V1.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/train/Y07/...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>Flip_V1.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/train/Y07/...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V2.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/train/Y07/...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>Flip_V2.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/train/Y07/...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V3.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/train/Y07/...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4745</th>\n",
              "      <td>121</td>\n",
              "      <td>77</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J463.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4746</th>\n",
              "      <td>122</td>\n",
              "      <td>78</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>J464.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/J...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4747</th>\n",
              "      <td>123</td>\n",
              "      <td>78</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J464.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4748</th>\n",
              "      <td>124</td>\n",
              "      <td>79</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>J465.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/J...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4749</th>\n",
              "      <td>125</td>\n",
              "      <td>79</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J465.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4750 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-573bc01f-7ebc-4c95-bfd3-c399319881ac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-573bc01f-7ebc-4c95-bfd3-c399319881ac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-573bc01f-7ebc-4c95-bfd3-c399319881ac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "df = pd.read_csv (r'/content/drive/MyDrive/cut_panoramic/Data/New_All_Age_0.csv')\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "Sa_dq25vCUfN"
      },
      "outputs": [],
      "source": [
        "import sys\n",
        "sys.path.append('/content/drive/MyDrive/cut_panoramic/Model/Classification/All_Age/(1e-4)AC3_AllAge_Freeze_250.h5')\n",
        "\n",
        "from efficientnet.layers import Swish, DropConnect\n",
        "from efficientnet.model import ConvKernalInitializer\n",
        "from tensorflow.keras.utils import get_custom_objects\n",
        "\n",
        "get_custom_objects().update({\n",
        "    'ConvKernalInitializer': ConvKernalInitializer,\n",
        "    'Swish': Swish,\n",
        "    'DropConnect':DropConnect\n",
        "})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "dDq_RhxuB3US",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6c11622c-aa72-4780-e96d-dc525c209959"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.9/dist-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.\n",
            "Instructions for updating:\n",
            "Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089\n"
          ]
        }
      ],
      "source": [
        "from tensorflow.keras.models import load_model\n",
        "model = load_model('/content/drive/MyDrive/cut_panoramic/Model/Classification/All_Age/(1e-4)AC3_AllAge_Freeze_250.h5')\n",
        "height = width = model.input_shape[1]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "IPwibaNFDfcS"
      },
      "outputs": [],
      "source": [
        "base_dir = '/content/drive/MyDrive/TVT_All_Age'\n",
        "os.makedirs(base_dir, exist_ok=True)\n",
        "\n",
        "# Directories for our training,\n",
        "# validation and test splits\n",
        "train_dir = os.path.join(base_dir, 'train')\n",
        "os.makedirs(train_dir, exist_ok=True)\n",
        "validation_dir = os.path.join(base_dir, 'validation')\n",
        "os.makedirs(validation_dir, exist_ok=True)\n",
        "test_dir = os.path.join(base_dir, 'test')\n",
        "os.makedirs(test_dir, exist_ok=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xi1ozW49B_cT",
        "outputId": "319c70bf-dfeb-4e6e-eac2-aeb357d8eb2d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 2850 images belonging to 19 classes.\n",
            "{0: 'Y07', 1: 'Y08', 2: 'Y09', 3: 'Y10', 4: 'Y11', 5: 'Y12', 6: 'Y13', 7: 'Y14', 8: 'Y15', 9: 'Y16', 10: 'Y17', 11: 'Y18', 12: 'Y19', 13: 'Y20', 14: 'Y21', 15: 'Y22', 16: 'Y23', 17: 'Y24', 18: 'Y25'}\n"
          ]
        }
      ],
      "source": [
        "batch_size = 16\n",
        "\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "train_datagen = ImageDataGenerator(\n",
        "      rescale=1./255, #โมเดลส่วนใหญ่ต้องใช้ RGB ในช่วง 0–1\n",
        "      rotation_range=40,\n",
        "      width_shift_range=0.2,\n",
        "      height_shift_range=0.2,\n",
        "      shear_range=0.2,\n",
        "      zoom_range=0.2,\n",
        "      horizontal_flip=True,\n",
        "      fill_mode='nearest')\n",
        "\n",
        "# Note that the validation data should not be augmented!\n",
        "test_datagen = ImageDataGenerator(rescale=1./255)\n",
        "\n",
        "train_generator = train_datagen.flow_from_directory(\n",
        "        # This is the target directory #ไดเรกเป้าหมาย\n",
        "        train_dir,\n",
        "        # รูปภาพทั้งหมดจะถูกปรับขนาดตามความสูงและความกว้างของเป้าหมาย\n",
        "        target_size=(height, width),\n",
        "        batch_size=batch_size,\n",
        "        # Since we use categorical_crossentropy loss, we need categorical labels\n",
        "        #เนื่องจากเราใช้ categorical_crossentropy loss เราจึงต้องมีป้ายกำกับตามหมวดหมู่\n",
        "        class_mode='categorical')\n",
        "\n",
        "#label\n",
        "labels = (train_generator.class_indices)\n",
        "labels = dict((v,k) for k,v in labels.items())\n",
        "print(labels)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "c1_BK5epD6r5",
        "outputId": "e5e685b1-f83f-496d-f8b0-d3573a7f3045"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Fig_Age  Fig_Person_Sex  Age(year) Class  Class_Re       Filename  \\\n",
              "100       101              51          7   Y07         0        V67.jpg   \n",
              "101       102              51          7   Y07         0   Flip_V67.jpg   \n",
              "102       103              52          7   Y07         0        V68.jpg   \n",
              "103       104              52          7   Y07         0   Flip_V68.jpg   \n",
              "104       105              53          7   Y07         0        V69.jpg   \n",
              "...       ...             ...        ...   ...       ...            ...   \n",
              "4745      121              77         25   Y25        18  Flip_J463.jpg   \n",
              "4746      122              78         25   Y25        18       J464.jpg   \n",
              "4747      123              78         25   Y25        18  Flip_J464.jpg   \n",
              "4748      124              79         25   Y25        18       J465.jpg   \n",
              "4749      125              79         25   Y25        18  Flip_J465.jpg   \n",
              "\n",
              "                                          Path_filename     Sex Floder  \n",
              "100   /content/drive/My Drive/TVT_All_Age/test/Y07/V...  Female   Both  \n",
              "101   /content/drive/My Drive/TVT_All_Age/test/Y07/F...  Female   Both  \n",
              "102   /content/drive/My Drive/TVT_All_Age/test/Y07/V...  Female   Both  \n",
              "103   /content/drive/My Drive/TVT_All_Age/test/Y07/F...  Female   Both  \n",
              "104   /content/drive/My Drive/TVT_All_Age/test/Y07/V...  Female   Both  \n",
              "...                                                 ...     ...    ...  \n",
              "4745  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "4746  /content/drive/My Drive/TVT_All_Age/test/Y25/J...    Male   Both  \n",
              "4747  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "4748  /content/drive/My Drive/TVT_All_Age/test/Y25/J...    Male   Both  \n",
              "4749  /content/drive/My Drive/TVT_All_Age/test/Y25/F...    Male   Both  \n",
              "\n",
              "[950 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-811f4f90-3535-487d-8ae3-478e108bfdc5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fig_Age</th>\n",
              "      <th>Fig_Person_Sex</th>\n",
              "      <th>Age(year)</th>\n",
              "      <th>Class</th>\n",
              "      <th>Class_Re</th>\n",
              "      <th>Filename</th>\n",
              "      <th>Path_filename</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Floder</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>101</td>\n",
              "      <td>51</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V67.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y07/V...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>102</td>\n",
              "      <td>51</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>Flip_V67.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y07/F...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>103</td>\n",
              "      <td>52</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V68.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y07/V...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>104</td>\n",
              "      <td>52</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>Flip_V68.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y07/F...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>105</td>\n",
              "      <td>53</td>\n",
              "      <td>7</td>\n",
              "      <td>Y07</td>\n",
              "      <td>0</td>\n",
              "      <td>V69.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y07/V...</td>\n",
              "      <td>Female</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4745</th>\n",
              "      <td>121</td>\n",
              "      <td>77</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J463.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4746</th>\n",
              "      <td>122</td>\n",
              "      <td>78</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>J464.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/J...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4747</th>\n",
              "      <td>123</td>\n",
              "      <td>78</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J464.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4748</th>\n",
              "      <td>124</td>\n",
              "      <td>79</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>J465.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/J...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4749</th>\n",
              "      <td>125</td>\n",
              "      <td>79</td>\n",
              "      <td>25</td>\n",
              "      <td>Y25</td>\n",
              "      <td>18</td>\n",
              "      <td>Flip_J465.jpg</td>\n",
              "      <td>/content/drive/My Drive/TVT_All_Age/test/Y25/F...</td>\n",
              "      <td>Male</td>\n",
              "      <td>Both</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>950 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-811f4f90-3535-487d-8ae3-478e108bfdc5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-811f4f90-3535-487d-8ae3-478e108bfdc5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-811f4f90-3535-487d-8ae3-478e108bfdc5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "test = df[df['Fig_Age'].between(101,125)]\n",
        "test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "8TRhj_ncDbqq"
      },
      "outputs": [],
      "source": [
        "act = test['Class'].tolist() #ค่าจริง\n",
        "path = test['Path_filename'].tolist() #path\n",
        "act_Re = test['Class_Re'].tolist() #ค่าจริง"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "2eBCfOnOD8aX"
      },
      "outputs": [],
      "source": [
        "# act"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "tBFLv9UJD9m0"
      },
      "outputs": [],
      "source": [
        "from tensorflow.keras.preprocessing import image\n",
        "\n",
        "def predict_image(img_path):\n",
        "    # Read the image and resize it\n",
        "    img = image.load_img(img_path, target_size=(height, width)) #รูปทุกรูปมีขนาดไม่เท่ากันจึงตั้งไว้ว่าเวลาจะให้ model ดึงรูปมาทำนายให้ดึงรูปเข้ามาตามขนาดที่ตั้งไว้ตามพารามิตเตอร์\n",
        "    # Convert it to a Numpy array with target shape.\n",
        "    x = image.img_to_array(img)  #model ไม่สามารถทำนายรูปภาพโดยตรงได้ จึงเเปลงรูปภาพให้เป็น array เเล้วให้โมเดลทำนาย\n",
        "    # Reshape\n",
        "    x = x.reshape((1,) + x.shape) # เพิ่ม ไดเมนชั่นของโมเดล ให้เป็น 4 ได้ เมนชั่น โดยที่ 1, คือบอกให้โมเดลนำเข้าทีละ 1 รูปเเล้วค่อยทำนาย เเละ + ไดเมนชั่น คือ 150 ,150 ,3(สีของ RGB)\n",
        "    x /= 255.\n",
        "    result = model.predict([x])\n",
        "    return result[0]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K_xWno8PFb5K",
        "outputId": "01f1ae3c-6196-443b-919f-4bdc17c1e112"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 2s 2s/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([9.9990380e-01, 9.5657655e-05, 4.7178304e-07, 3.0189948e-12,\n",
              "       2.6598471e-19, 2.0072117e-29, 0.0000000e+00, 0.0000000e+00,\n",
              "       0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,\n",
              "       0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00,\n",
              "       0.0000000e+00, 0.0000000e+00, 0.0000000e+00], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "predict_image(path[0])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "Vjx_4HEsEqsq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "939cf13d-ca70-443a-9b11-92fb9efdfb86"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 69ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Y07'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "no = np.argmax(predict_image(path[0]))\n",
        "labels[no]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "FX6FmOMzEjDk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "95a9b440-691d-43c9-f44e-bf9258483ce0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 72ms/step\n",
            "1/1 [==============================] - 0s 104ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 102ms/step\n",
            "1/1 [==============================] - 0s 103ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 86ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 113ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 103ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 74ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 72ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 105ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 75ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 104ms/step\n",
            "1/1 [==============================] - 0s 102ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 86ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 160ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 135ms/step\n",
            "1/1 [==============================] - 0s 118ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 54ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 110ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 85ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 84ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 75ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 107ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 85ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 104ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 117ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 104ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 115ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 79ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 105ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 116ms/step\n",
            "1/1 [==============================] - 0s 113ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 85ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 99ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 54ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 76ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 102ms/step\n",
            "1/1 [==============================] - 0s 85ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 81ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 72ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 76ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 103ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 83ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 54ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 86ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 72ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 99ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 97ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 101ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 94ms/step\n",
            "1/1 [==============================] - 0s 102ms/step\n",
            "1/1 [==============================] - 0s 98ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 106ms/step\n",
            "1/1 [==============================] - 0s 98ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 54ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 72ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 109ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 99ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 74ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 78ms/step\n",
            "1/1 [==============================] - 0s 82ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 91ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 55ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 61ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 89ms/step\n",
            "1/1 [==============================] - 0s 110ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 101ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 96ms/step\n",
            "1/1 [==============================] - 0s 85ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 67ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 57ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 56ms/step\n",
            "1/1 [==============================] - 0s 63ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 66ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 59ms/step\n",
            "1/1 [==============================] - 0s 87ms/step\n",
            "1/1 [==============================] - 0s 92ms/step\n",
            "1/1 [==============================] - 0s 93ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 101ms/step\n",
            "1/1 [==============================] - 0s 86ms/step\n",
            "1/1 [==============================] - 0s 90ms/step\n",
            "1/1 [==============================] - 0s 60ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 58ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 95ms/step\n",
            "1/1 [==============================] - 0s 68ms/step\n",
            "1/1 [==============================] - 0s 79ms/step\n",
            "1/1 [==============================] - 0s 75ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 88ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 76ms/step\n",
            "1/1 [==============================] - 0s 70ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 62ms/step\n",
            "1/1 [==============================] - 0s 82ms/step\n",
            "1/1 [==============================] - 0s 77ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 74ms/step\n",
            "1/1 [==============================] - 1s 546ms/step\n",
            "1/1 [==============================] - 0s 108ms/step\n",
            "1/1 [==============================] - 0s 71ms/step\n",
            "1/1 [==============================] - 0s 64ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n",
            "1/1 [==============================] - 0s 73ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n",
            "1/1 [==============================] - 0s 121ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 101ms/step\n",
            "1/1 [==============================] - 0s 106ms/step\n",
            "1/1 [==============================] - 0s 102ms/step\n",
            "1/1 [==============================] - 0s 105ms/step\n",
            "1/1 [==============================] - 0s 105ms/step\n",
            "1/1 [==============================] - 0s 100ms/step\n",
            "1/1 [==============================] - 0s 69ms/step\n"
          ]
        }
      ],
      "source": [
        "#Predict\n",
        "pred_list = list()\n",
        "prob_list = list()\n",
        "pred_Re = list()\n",
        "\n",
        "img_path= path\n",
        "for i in range(0,len(img_path)):\n",
        "    predict = predict_image(img_path[i])\n",
        "    result = np.argmax(predict)\n",
        "    pred_list.append(labels[result])\n",
        "    pred_Re.append(result)\n",
        "    prob_list.append(predict[result])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "vQqw0uH8-T4O",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "74b2466f-2394-4875-b372-8f634f7efc8e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y08',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y22',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y22',\n",
              " 'Y14',\n",
              " 'Y16',\n",
              " 'Y12',\n",
              " 'Y16',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y24',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y24',\n",
              " 'Y20',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y10',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y19',\n",
              " 'Y16',\n",
              " 'Y14',\n",
              " 'Y16',\n",
              " 'Y14',\n",
              " 'Y19',\n",
              " 'Y24',\n",
              " 'Y19',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y17',\n",
              " 'Y17',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y16',\n",
              " 'Y13',\n",
              " 'Y07',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y12',\n",
              " 'Y17',\n",
              " 'Y20',\n",
              " 'Y16',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y07',\n",
              " 'Y25',\n",
              " 'Y25',\n",
              " 'Y12',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y19',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y23',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y13',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y19',\n",
              " 'Y24',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y16',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y15',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y16',\n",
              " 'Y20',\n",
              " 'Y19',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y17',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y20',\n",
              " 'Y22',\n",
              " 'Y10',\n",
              " 'Y25',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y25',\n",
              " 'Y25',\n",
              " 'Y22',\n",
              " 'Y21',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y20',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y14',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y25',\n",
              " 'Y23',\n",
              " 'Y25',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y12',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y25',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y20',\n",
              " 'Y16',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y16',\n",
              " 'Y19',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y22',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y19',\n",
              " 'Y19',\n",
              " 'Y21',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y22',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y25',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y24',\n",
              " 'Y13',\n",
              " 'Y25',\n",
              " 'Y13',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y16',\n",
              " 'Y21',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y21',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y21',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y25',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y22',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y20',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y21',\n",
              " 'Y21',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y21',\n",
              " 'Y21',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y14',\n",
              " 'Y25',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y22',\n",
              " 'Y16',\n",
              " 'Y25',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y12',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y07',\n",
              " 'Y08',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y11',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y07',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y08',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y07',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y08',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y09',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y14',\n",
              " 'Y18',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y16',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y14',\n",
              " 'Y10',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y09',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y08',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y10',\n",
              " 'Y09',\n",
              " 'Y17',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y14',\n",
              " 'Y14',\n",
              " 'Y14',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y14',\n",
              " 'Y10',\n",
              " 'Y14',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y09',\n",
              " 'Y23',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y17',\n",
              " 'Y18',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y17',\n",
              " 'Y14',\n",
              " 'Y09',\n",
              " 'Y14',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y18',\n",
              " 'Y14',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y22',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y20',\n",
              " 'Y23',\n",
              " 'Y17',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y18',\n",
              " 'Y23',\n",
              " 'Y14',\n",
              " 'Y22',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y13',\n",
              " 'Y21',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y11',\n",
              " 'Y17',\n",
              " 'Y18',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y20',\n",
              " 'Y20',\n",
              " 'Y19',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y20',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y22',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y10',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y12',\n",
              " 'Y11',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y13',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y11',\n",
              " 'Y21',\n",
              " 'Y07',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y18',\n",
              " 'Y18',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y24',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y19',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y14',\n",
              " 'Y16',\n",
              " 'Y21',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y16',\n",
              " 'Y16',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y19',\n",
              " 'Y20',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y10',\n",
              " 'Y10',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y20',\n",
              " 'Y10',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y18',\n",
              " 'Y18',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y20',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y25',\n",
              " 'Y12',\n",
              " 'Y20',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y13',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y22',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y13',\n",
              " 'Y23',\n",
              " 'Y23',\n",
              " 'Y11',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y12',\n",
              " 'Y23',\n",
              " 'Y21',\n",
              " 'Y22',\n",
              " 'Y16',\n",
              " 'Y23',\n",
              " 'Y23']"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "pred_list"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "X1VKsxTELIIh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7aad4072-7743-42ee-ae7f-b69c5d9077bf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9999038"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "prob_list[0]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "u_MQmuk3JiRj"
      },
      "outputs": [],
      "source": [
        "# data_train = valframe\n",
        "# #เช็คคลาสใน Predicted\n",
        "# pred_class = set(data_train['category_ov'])\n",
        "# print('Predicted : ',len(pred_class))\n",
        "# print(pred_class)\n",
        "# print('-'*50)\n",
        "# #เช็คคลาสใน Actual\n",
        "# classe = set(data_train['class'])\n",
        "# print('Actual : ',len(classe))\n",
        "# print(classe)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "ezbChl5EKQA7"
      },
      "outputs": [],
      "source": [
        "pred = np.array(pred_list) #แปลงเป็น array\n",
        "act = np.array(act)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "_pzpwmMAJwz-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0a30ea46-75f0-4e04-869f-d8889b43bf0c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "classifier accuracy = 18.42105263157895%\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         Y07       0.56      0.88      0.69        50\n",
            "         Y08       0.30      0.14      0.19        50\n",
            "         Y09       0.25      0.44      0.32        50\n",
            "         Y10       0.14      0.28      0.18        50\n",
            "         Y11       0.19      0.44      0.26        50\n",
            "         Y12       0.12      0.32      0.17        50\n",
            "         Y13       0.17      0.20      0.18        50\n",
            "         Y14       0.06      0.04      0.05        50\n",
            "         Y15       0.00      0.00      0.00        50\n",
            "         Y16       0.06      0.06      0.06        50\n",
            "         Y17       0.22      0.04      0.07        50\n",
            "         Y18       0.22      0.04      0.07        50\n",
            "         Y19       0.09      0.04      0.06        50\n",
            "         Y20       0.08      0.04      0.05        50\n",
            "         Y21       0.11      0.04      0.06        50\n",
            "         Y22       0.17      0.06      0.09        50\n",
            "         Y23       0.14      0.40      0.21        50\n",
            "         Y24       0.00      0.00      0.00        50\n",
            "         Y25       0.14      0.04      0.06        50\n",
            "\n",
            "    accuracy                           0.18       950\n",
            "   macro avg       0.16      0.18      0.15       950\n",
            "weighted avg       0.16      0.18      0.15       950\n",
            "\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "from sklearn.metrics import confusion_matrix\n",
        "\n",
        "# act = data_train['class'].array\n",
        "# pred = data_train['category_ov'].array\n",
        "\n",
        "cmat = confusion_matrix(act, pred)\n",
        "print('classifier accuracy = {}%'.format((100.*np.trace(cmat))/(np.sum(cmat))))\n",
        "\n",
        "#Marking the Confusion Matrix\n",
        "from sklearn.metrics import classification_report,confusion_matrix\n",
        "print(classification_report(act, pred))#performance"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "qCeaPS3pJzwt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 654
        },
        "outputId": "c0714964-b2f7-42e2-93d6-66657d437897"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 66.5, 'Predicted label')"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#create CF \n",
        "data = {'Actual': act,'Predicted' : pred,}\n",
        "df = pd.DataFrame(data, columns=['Actual','Predicted'])\n",
        "conf_mat = pd.crosstab(df['Actual'],df['Predicted'],rownames=['Actual'],colnames=['Predicted'])\n",
        "\n",
        "#Confusion matrix\n",
        "from sklearn.metrics import confusion_matrix\n",
        "import matplotlib.pyplot as plt\n",
        "cm = confusion_matrix(act, pred)\n",
        "\n",
        "#plot Confusion matrix\n",
        "import seaborn as sns\n",
        "sns.set()\n",
        "fig, ax = plt.subplots(figsize=(10, 10))\n",
        "\n",
        "ax = sns.heatmap(conf_mat, annot=True, fmt=\"d\", cmap=\"YlGnBu\") #Blues,Oranges,Reds\n",
        "ax.set_title('Confusion matrix',fontsize=20)\n",
        "ax.set_ylabel('True label',fontsize=18)\n",
        "ax.set_xlabel('Predicted label',fontsize=18)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "wv3kRyGxArop"
      },
      "outputs": [],
      "source": [
        "act_Re = np.array(act_Re)\n",
        "pred_int = np.around(pred_Re)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "act_Re"
      ],
      "metadata": {
        "id": "IOAm41XXT4rT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "764fc883-a438-4789-a175-646aca9dded1"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n",
              "        0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n",
              "        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,\n",
              "        2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,\n",
              "        2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,\n",
              "        3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,\n",
              "        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n",
              "        4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n",
              "        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,\n",
              "        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n",
              "        6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,\n",
              "        7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,\n",
              "        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n",
              "        8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n",
              "        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10,\n",
              "       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n",
              "       10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n",
              "       11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,\n",
              "       12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n",
              "       12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n",
              "       13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14,\n",
              "       14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n",
              "       14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n",
              "       15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16,\n",
              "       16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n",
              "       17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n",
              "       17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n",
              "       18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n",
              "       19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,\n",
              "       19, 19, 19, 19, 19, 19, 19,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n",
              "        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,\n",
              "        2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,\n",
              "        2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,\n",
              "        3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,\n",
              "        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,\n",
              "        4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n",
              "        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,\n",
              "        6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n",
              "        6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,\n",
              "        7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,\n",
              "        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n",
              "        8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,\n",
              "        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10,\n",
              "       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n",
              "       10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n",
              "       11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12,\n",
              "       12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n",
              "       12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n",
              "       13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14,\n",
              "       14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n",
              "       15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n",
              "       15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n",
              "       16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17,\n",
              "       17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n",
              "       17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n",
              "       18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18])"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pred_int"
      ],
      "metadata": {
        "id": "RsQSHOXhT6vI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1f5ac524-6bbb-4de5-9166-37e01c425528"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  0,  0,  0,  0,  0,  2,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n",
              "        0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  1,  0,  0,  0,  2,  2,  2,\n",
              "        2,  0,  0,  0,  2,  1,  0,  0,  1,  2,  2,  2,  3,  0,  0,  2,  3,\n",
              "        3,  2,  2,  2,  3,  2,  2,  2,  2,  0,  1,  0,  1,  2,  3,  2,  1,\n",
              "        0,  0,  0,  2,  1,  2,  3,  2,  3,  2,  3,  3,  3,  3,  2,  2,  4,\n",
              "        5,  3,  3,  1,  2,  2,  2,  0,  2,  2,  2,  0,  2,  0,  0,  3,  3,\n",
              "        4,  3,  4,  2,  3,  3,  2,  4,  4,  4,  4,  3,  3,  1,  4,  4,  4,\n",
              "        4,  3,  4,  4,  3,  4,  6,  5,  3,  3,  6,  5,  4,  5,  5,  3,  5,\n",
              "        5,  3,  4, 15,  5,  4,  3,  4,  3,  5,  5,  4,  4,  4,  3, 15,  7,\n",
              "        9,  5,  9,  3,  2,  5,  5,  3,  4,  5,  6,  3,  5,  4,  6,  7,  3,\n",
              "        4,  4,  4,  5,  6,  7,  4,  5,  4,  5, 17,  6,  6,  3,  5,  7,  6,\n",
              "        4,  3,  6,  3,  5, 17, 13,  3,  4,  4,  9,  4,  5,  3,  4, 16, 16,\n",
              "       16, 16,  4,  5, 16, 16,  3,  9,  4,  4,  5,  5,  3,  5, 16,  5, 12,\n",
              "        9,  7,  9,  7, 12, 17, 12,  4,  5,  4,  6,  6,  5,  5,  5,  5, 10,\n",
              "       10,  7,  6,  9,  6,  0,  6,  7,  5, 10, 13,  9,  3,  3,  4,  5,  3,\n",
              "        0, 18, 18,  5, 12, 16,  5, 16,  5, 12,  5,  7,  4,  5,  7, 16,  7,\n",
              "        6,  3,  6,  9,  9,  9,  3, 16, 16,  6,  5, 12, 17,  9, 16,  5, 16,\n",
              "       16, 13, 13,  9,  3,  4,  5,  8,  4,  5,  9, 13, 12,  5,  6, 10,  5,\n",
              "        5,  6,  5,  5,  3, 16, 13, 15,  3, 18,  4,  6,  4,  5, 18, 18, 15,\n",
              "       14,  5,  4,  4,  5,  5, 13,  4,  4,  5, 16, 16,  5,  5,  3,  7, 16,\n",
              "       12, 16, 16,  5,  6, 18, 16, 18, 16,  9,  5, 13, 13, 13,  9,  9,  9,\n",
              "        6,  5,  5,  4,  5, 18, 16, 14, 13,  9,  5,  4,  9, 12, 12, 16, 15,\n",
              "        5, 16, 16,  4,  4, 15, 16, 12, 12, 12, 14, 12, 16,  6,  5, 15, 16,\n",
              "        5, 12, 16, 12,  5, 16, 14, 15,  3, 16,  5, 16, 18,  4,  4, 17,  6,\n",
              "       18,  6, 16, 16,  4,  6,  9, 16, 12,  9, 14,  5, 16,  5,  5, 14, 16,\n",
              "        4,  5,  3,  5, 14, 16, 16, 18,  5,  7, 15, 12, 16, 16, 16, 13,  5,\n",
              "        5, 14, 14,  4,  5, 14, 14,  4, 16, 16, 16,  9,  7, 18,  4,  4, 13,\n",
              "       13, 15,  9, 18,  5,  5,  9, 16,  9,  9, 13, 13,  5,  9,  9,  9,  0,\n",
              "        0,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,\n",
              "        0,  0,  0,  0,  0,  0,  3,  2,  2,  2,  0,  2,  0,  2,  2,  2,  2,\n",
              "        1,  0,  1,  1,  2,  1,  2,  2,  2,  2,  0,  2,  0,  0,  0,  4,  2,\n",
              "        1,  2,  2,  2,  2,  2,  3,  1,  2,  2,  1,  3,  3,  3,  3,  1,  2,\n",
              "        2,  3,  2,  0,  0,  0,  3,  3,  2,  2,  0,  2,  1,  1,  3,  3,  2,\n",
              "        2,  2,  2,  3,  3,  0,  2,  2,  3,  2,  2,  2,  2,  4,  4,  5,  4,\n",
              "        4,  3,  3,  2,  1,  2,  3,  4,  5,  3,  1,  2,  2,  4,  4,  4,  4,\n",
              "        5,  5,  4,  3,  3,  5,  6,  3,  4,  5,  4,  3,  5,  2,  2,  3,  5,\n",
              "        3,  4,  4,  4,  4,  6,  6,  6,  5,  5,  4,  4,  5,  4,  7, 11,  4,\n",
              "        5,  5,  5,  7,  6,  6,  6,  9,  6,  5,  5,  7,  6,  7,  7,  3,  6,\n",
              "        5,  6,  7,  5,  4,  5,  5,  4,  4,  2,  5,  4,  3,  5, 16, 16,  4,\n",
              "        4,  3,  3,  4,  3,  4,  3,  4,  5,  1,  3,  4,  4,  4,  3,  4,  4,\n",
              "        4,  4,  6,  5,  5,  6,  5,  5,  6,  5,  5,  5, 16,  3,  3,  3,  2,\n",
              "        3,  2, 10,  6,  7,  6,  6,  6,  7,  7,  7,  5,  3,  3,  3,  3,  9,\n",
              "        4,  4,  4,  4,  4,  4,  6,  3, 16,  5,  7,  3,  7, 16, 16,  4,  6,\n",
              "        5,  2, 16, 15, 16,  3,  3, 16, 16, 16,  9,  4, 10, 11, 16, 16, 10,\n",
              "        7,  2,  7,  6,  5, 16, 16,  6, 16, 16, 11,  7,  4, 16,  6,  5, 15,\n",
              "       15, 16, 12, 13, 16, 10, 16,  5, 16, 11, 16,  7, 15,  3, 16,  9,  6,\n",
              "       14,  9, 16, 16,  4, 16,  6,  4, 10, 11, 16, 16, 13, 13, 12,  5,  6,\n",
              "        6,  6,  5, 16,  9, 13, 16,  9,  9,  5,  4, 16, 16,  9,  9,  4,  5,\n",
              "       16, 15,  5,  5,  3,  9, 16,  4,  5,  4, 15, 16,  9, 16, 16,  6,  6,\n",
              "        5,  5,  5,  6,  4, 14,  0, 16,  9,  5,  5, 16, 16, 11, 11,  5, 16,\n",
              "       17, 16, 16,  9,  9, 12, 16, 16,  7,  9, 14,  3, 16,  5,  5, 16, 16,\n",
              "       16, 16, 16, 14,  9,  9,  4, 16, 16, 16, 12, 13, 16, 16, 14,  3,  3,\n",
              "       16, 16,  5, 16, 13,  3,  4, 16,  4, 16, 16, 16, 14, 16,  9, 16, 11,\n",
              "       11, 16, 16,  9, 16, 16, 14,  5,  5, 13, 16,  5, 16, 18,  5, 13, 16,\n",
              "        5,  6, 16, 16, 16, 16, 15, 16, 16, 16, 16, 16, 16,  5,  5, 16, 16,\n",
              "       16,  6, 16, 16,  4, 16,  5, 16,  5, 16, 14, 15,  9, 16, 16])"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
        "  \n",
        "mae = mean_absolute_error(act_Re, pred_int)\n",
        "#squared True returns MSE value, False returns RMSE value.\n",
        "mse = mean_squared_error(act_Re, pred_int) #default=True\n",
        "rmse = mean_squared_error(act_Re, pred_int, squared=False)\n",
        "  \n",
        "print(\"MAE:\",mae)\n",
        "print(\"MSE:\",mse)\n",
        "print(\"RMSE:\",rmse)"
      ],
      "metadata": {
        "id": "GvtyqoqJQCRY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b5059641-d5b7-4459-f5dc-af578910a334"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 3.8157894736842106\n",
            "MSE: 31.69578947368421\n",
            "RMSE: 5.629901373353197\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "m8N6zvorT0Sk"
      },
      "execution_count": 25,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}